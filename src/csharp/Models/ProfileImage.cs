// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Aliencube.Forem.DevTo.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Profile image
    /// </summary>
    public partial class ProfileImage
    {
        /// <summary>
        /// Initializes a new instance of the ProfileImage class.
        /// </summary>
        public ProfileImage()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ProfileImage class.
        /// </summary>
        /// <param name="typeOfProperty">Possible values include:
        /// 'profile_image'</param>
        /// <param name="imageOf">Discriminates what is the type of the profile
        /// image owner (user or organization). Possible values include:
        /// 'user', 'organization'</param>
        /// <param name="profileImageProperty">Profile image (640x640)</param>
        /// <param name="profileImage90">Profile image (90x90)</param>
        public ProfileImage(string typeOfProperty = default(string), string imageOf = default(string), string profileImageProperty = default(string), string profileImage90 = default(string))
        {
            TypeOfProperty = typeOfProperty;
            ImageOf = imageOf;
            ProfileImageProperty = profileImageProperty;
            ProfileImage90 = profileImage90;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets possible values include: 'profile_image'
        /// </summary>
        [JsonProperty(PropertyName = "type_of")]
        public string TypeOfProperty { get; set; }

        /// <summary>
        /// Gets or sets discriminates what is the type of the profile image
        /// owner (user or organization). Possible values include: 'user',
        /// 'organization'
        /// </summary>
        [JsonProperty(PropertyName = "image_of")]
        public string ImageOf { get; set; }

        /// <summary>
        /// Gets or sets profile image (640x640)
        /// </summary>
        [JsonProperty(PropertyName = "profile_image")]
        public string ProfileImageProperty { get; set; }

        /// <summary>
        /// Gets or sets profile image (90x90)
        /// </summary>
        [JsonProperty(PropertyName = "profile_image_90")]
        public string ProfileImage90 { get; set; }

    }
}
