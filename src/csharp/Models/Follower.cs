// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Aliencube.Forem.DevTo.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class Follower
    {
        /// <summary>
        /// Initializes a new instance of the Follower class.
        /// </summary>
        public Follower()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Follower class.
        /// </summary>
        /// <param name="id">Follow id</param>
        /// <param name="profileImage">Profile image (60x60)</param>
        public Follower(string typeOfProperty, int id, string name, string path, string username, string profileImage)
        {
            TypeOfProperty = typeOfProperty;
            Id = id;
            Name = name;
            Path = path;
            Username = username;
            ProfileImage = profileImage;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "type_of")]
        public string TypeOfProperty { get; set; }

        /// <summary>
        /// Gets or sets follow id
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public int Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "path")]
        public string Path { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "username")]
        public string Username { get; set; }

        /// <summary>
        /// Gets or sets profile image (60x60)
        /// </summary>
        [JsonProperty(PropertyName = "profile_image")]
        public string ProfileImage { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (TypeOfProperty == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "TypeOfProperty");
            }
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (Path == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Path");
            }
            if (Username == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Username");
            }
            if (ProfileImage == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ProfileImage");
            }
        }
    }
}
