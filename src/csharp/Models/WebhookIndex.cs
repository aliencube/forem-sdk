// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Aliencube.Forem.DevTo.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Webhook
    /// </summary>
    public partial class WebhookIndex
    {
        /// <summary>
        /// Initializes a new instance of the WebhookIndex class.
        /// </summary>
        public WebhookIndex()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the WebhookIndex class.
        /// </summary>
        /// <param name="source">The name of the requester, eg. "DEV"</param>
        /// <param name="events">An array of events identifiers</param>
        public WebhookIndex(string typeOfProperty = default(string), long? id = default(long?), string source = default(string), string targetUrl = default(string), IList<string> events = default(IList<string>), System.DateTime? createdAt = default(System.DateTime?))
        {
            TypeOfProperty = typeOfProperty;
            Id = id;
            Source = source;
            TargetUrl = targetUrl;
            Events = events;
            CreatedAt = createdAt;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "type_of")]
        public string TypeOfProperty { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public long? Id { get; set; }

        /// <summary>
        /// Gets or sets the name of the requester, eg. "DEV"
        /// </summary>
        [JsonProperty(PropertyName = "source")]
        public string Source { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "target_url")]
        public string TargetUrl { get; set; }

        /// <summary>
        /// Gets or sets an array of events identifiers
        /// </summary>
        [JsonProperty(PropertyName = "events")]
        public IList<string> Events { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "created_at")]
        public System.DateTime? CreatedAt { get; set; }

    }
}
