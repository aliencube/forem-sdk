// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Aliencube.Forem.DevTo.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class PodcastEpisode
    {
        /// <summary>
        /// Initializes a new instance of the PodcastEpisode class.
        /// </summary>
        public PodcastEpisode()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PodcastEpisode class.
        /// </summary>
        public PodcastEpisode(string typeOfProperty, int id, string path, string imageUrl, string title, PodcastEpisodePodcast podcast)
        {
            TypeOfProperty = typeOfProperty;
            Id = id;
            Path = path;
            ImageUrl = imageUrl;
            Title = title;
            Podcast = podcast;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "type_of")]
        public string TypeOfProperty { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public int Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "path")]
        public string Path { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "image_url")]
        public string ImageUrl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "title")]
        public string Title { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "podcast")]
        public PodcastEpisodePodcast Podcast { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (TypeOfProperty == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "TypeOfProperty");
            }
            if (Path == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Path");
            }
            if (ImageUrl == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ImageUrl");
            }
            if (Title == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Title");
            }
            if (Podcast == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Podcast");
            }
        }
    }
}
