// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Aliencube.Forem.DevTo.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class ArticleVideo
    {
        /// <summary>
        /// Initializes a new instance of the ArticleVideo class.
        /// </summary>
        public ArticleVideo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ArticleVideo class.
        /// </summary>
        /// <param name="cloudinaryVideoUrl">The preview image of the
        /// video</param>
        /// <param name="videoDurationInMinutes">The duration of the video.
        ///
        /// If the video duration is below 1 hour, the format will be `mm:ss`,
        /// if it's 1 hour or above the format will be `h:mm:ss`.
        /// </param>
        public ArticleVideo(string typeOfProperty, int id, string path, string cloudinaryVideoUrl, string title, int userId, string videoDurationInMinutes, string videoSourceUrl, ArticleVideoUser user)
        {
            TypeOfProperty = typeOfProperty;
            Id = id;
            Path = path;
            CloudinaryVideoUrl = cloudinaryVideoUrl;
            Title = title;
            UserId = userId;
            VideoDurationInMinutes = videoDurationInMinutes;
            VideoSourceUrl = videoSourceUrl;
            User = user;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "type_of")]
        public string TypeOfProperty { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public int Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "path")]
        public string Path { get; set; }

        /// <summary>
        /// Gets or sets the preview image of the video
        /// </summary>
        [JsonProperty(PropertyName = "cloudinary_video_url")]
        public string CloudinaryVideoUrl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "title")]
        public string Title { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "user_id")]
        public int UserId { get; set; }

        /// <summary>
        /// Gets or sets the duration of the video.
        ///
        /// If the video duration is below 1 hour, the format will be `mm:ss`,
        /// if it's 1 hour or above the format will be `h:mm:ss`.
        ///
        /// </summary>
        [JsonProperty(PropertyName = "video_duration_in_minutes")]
        public string VideoDurationInMinutes { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "video_source_url")]
        public string VideoSourceUrl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "user")]
        public ArticleVideoUser User { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (TypeOfProperty == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "TypeOfProperty");
            }
            if (Path == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Path");
            }
            if (CloudinaryVideoUrl == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "CloudinaryVideoUrl");
            }
            if (Title == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Title");
            }
            if (VideoDurationInMinutes == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "VideoDurationInMinutes");
            }
            if (VideoSourceUrl == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "VideoSourceUrl");
            }
            if (User == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "User");
            }
        }
    }
}
