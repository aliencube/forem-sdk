// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Aliencube.Forem.DevTo.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class ReadingList
    {
        /// <summary>
        /// Initializes a new instance of the ReadingList class.
        /// </summary>
        public ReadingList()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ReadingList class.
        /// </summary>
        /// <param name="id">Follow id</param>
        /// <param name="status">Possible values include: 'valid', 'invalid',
        /// 'confirmed', 'archived'</param>
        public ReadingList(string typeOfProperty, int id, string status, System.DateTime createdAt, ArticleIndex article)
        {
            TypeOfProperty = typeOfProperty;
            Id = id;
            Status = status;
            CreatedAt = createdAt;
            Article = article;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "type_of")]
        public string TypeOfProperty { get; set; }

        /// <summary>
        /// Gets or sets follow id
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public int Id { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'valid', 'invalid',
        /// 'confirmed', 'archived'
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "created_at")]
        public System.DateTime CreatedAt { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "article")]
        public ArticleIndex Article { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (TypeOfProperty == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "TypeOfProperty");
            }
            if (Status == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Status");
            }
            if (Article == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Article");
            }
            if (Article != null)
            {
                Article.Validate();
            }
        }
    }
}
