// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Aliencube.Forem.DevTo.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class Comment
    {
        /// <summary>
        /// Initializes a new instance of the Comment class.
        /// </summary>
        public Comment()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Comment class.
        /// </summary>
        /// <param name="bodyHtml">HTML formatted comment</param>
        public Comment(string typeOfProperty, string idCode, System.DateTime createdAt, string bodyHtml, SharedUser user, IList<Comment> children)
        {
            TypeOfProperty = typeOfProperty;
            IdCode = idCode;
            CreatedAt = createdAt;
            BodyHtml = bodyHtml;
            User = user;
            Children = children;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "type_of")]
        public string TypeOfProperty { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id_code")]
        public string IdCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "created_at")]
        public System.DateTime CreatedAt { get; set; }

        /// <summary>
        /// Gets or sets HTML formatted comment
        /// </summary>
        [JsonProperty(PropertyName = "body_html")]
        public string BodyHtml { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "user")]
        public SharedUser User { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "children")]
        public IList<Comment> Children { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (TypeOfProperty == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "TypeOfProperty");
            }
            if (IdCode == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "IdCode");
            }
            if (BodyHtml == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "BodyHtml");
            }
            if (User == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "User");
            }
            if (Children == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Children");
            }
            if (Children != null)
            {
                foreach (var element in Children)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
